// F√ºr die Hilfe-Ansicht
use super::common::*;
use super::Tab;
use ratatui::widgets::Wrap;

pub fn create_help(tab: &Tab) -> Paragraph<'static> {
    let content = match tab {
        Tab::Dashboard => vec![
            Line::from(vec![
                Span::styled("Dashboard √úbersicht", 
                    Style::default().fg(Color::Yellow).add_modifier(Modifier::BOLD))
            ]),
            Line::from(""),
            Line::from("Das Dashboard zeigt die wichtigsten Informationen √ºber Ihren Bitcoin Node:"),
            Line::from(""),
            Line::from(vec![
                Span::styled("‚ö° Netzwerk & Verbindungen", 
                    Style::default().fg(Color::Cyan).add_modifier(Modifier::BOLD))
            ]),
            Line::from(" ‚Ä¢ Netzwerk: main/test/regtest - Zeigt das aktuelle Bitcoin-Netzwerk"),
            Line::from(" ‚Ä¢ Peers: Anzahl der verbundenen Nodes (gr√ºn wenn >8 Verbindungen)"),
            Line::from(""),
            Line::from(vec![
                Span::styled("üì¶ Blockchain Status", 
                    Style::default().fg(Color::Cyan).add_modifier(Modifier::BOLD))
            ]),
            Line::from(" ‚Ä¢ Bl√∂cke: Aktuelle Blockchain-H√∂he"),
            Line::from(" ‚Ä¢ Headers: Anzahl der bekannten Block-Header"),
            Line::from(" ‚Ä¢ Difficulty: Aktuelle Mining-Schwierigkeit"),
            Line::from(" ‚Ä¢ Chain Work: Kumulative Arbeit in der Blockchain (in Hex)"),
            Line::from(""),
            Line::from(vec![
                Span::styled("üîÑ Synchronisation", 
                    Style::default().fg(Color::Cyan).add_modifier(Modifier::BOLD))
            ]),
            Line::from(" ‚Ä¢ Status: Synchronisationsfortschritt in Prozent"),
            Line::from(" ‚Ä¢ IBD: Initial Block Download Status"),
            Line::from(" ‚Ä¢ Speicherplatz: Gr√∂√üe der Blockchain auf der Festplatte"),
            Line::from(" ‚Ä¢ Pruned: Zeigt an, ob der Node im Pruning-Modus l√§uft"),
            Line::from(""),
            Line::from(vec![
                Span::styled("üí≠ Mempool", 
                    Style::default().fg(Color::Cyan).add_modifier(Modifier::BOLD))
            ]),
            Line::from(" ‚Ä¢ Transaktionen: Anzahl der unbest√§tigten Transaktionen"),
            Line::from(""),
            Line::from(vec![
                Span::styled("Tastenkombinationen:", 
                    Style::default().fg(Color::Yellow).add_modifier(Modifier::BOLD))
            ]),
            Line::from(" ‚Ä¢ H: Diese Hilfe anzeigen/ausblenden"),
            Line::from(" ‚Ä¢ 1-8: Direktauswahl der Tabs"),
            Line::from(" ‚Ä¢ Q: Programm beenden"),
            Line::from(""),
            Line::from(vec![
                Span::styled("Tab-Auswahl:", 
                    Style::default().fg(Color::Yellow).add_modifier(Modifier::BOLD))
            ]),
            Line::from(" 1: Dashboard"),
            Line::from(" 2: Block Details"),
            Line::from(" 3: Mempool"),
            Line::from(" 4: Netzwerk"),
            Line::from(" 5: Peer Liste"),
            Line::from(" 6: Mining"),
            Line::from(" 7: Security"),
            Line::from(" 8: Explorer"),
        ],
        Tab::BlockDetails => vec![
            Line::from(vec![
                Span::styled("Block Details", Style::default().fg(Color::Yellow)),
            ]),
            Line::from(""),
            Line::from(" ‚Ä¢ Aktuelle Blockh√∂he"),
            Line::from(" ‚Ä¢ Block Hash"),
            Line::from(" ‚Ä¢ Zeitstempel"),
            Line::from(""),
            Line::from("Tastenkombinationen:"),
            Line::from(" ‚Ä¢ H: Hilfe anzeigen/ausblenden"),
            Line::from(" ‚Ä¢ 1-8: Direktauswahl der Tabs"),
            Line::from(" ‚Ä¢ Q: Programm beenden"),
        ],
        Tab::Mempool => vec![
            Line::from(vec![
                Span::styled("Mempool Status", Style::default().fg(Color::Yellow)),
            ]),
            Line::from(""),
            Line::from("Tastenbelegung:"),
            Line::from(" [R] Aktualisieren"),
            Line::from(" [H] Hilfe ausblenden"),
            Line::from(""),
            Line::from("Statistiken:"),
            Line::from(" ‚Ä¢ Transaktionsanzahl und Gr√∂√üe"),
            Line::from(" ‚Ä¢ Geb√ºhrenverteilung (sat/vB)"),
            Line::from(" ‚Ä¢ Gr√∂√üenverteilung der Transaktionen"),
            Line::from(" ‚Ä¢ Altersverteilung im Mempool"),
        ],
        Tab::Network => vec![
            Line::from(vec![
                Span::styled("Netzwerk & Peers", Style::default().fg(Color::Yellow)),
            ]),
            Line::from(""),
            Line::from("Tastenbelegung:"),
            Line::from(" [R] Aktualisieren"),
            Line::from(" [H] Hilfe ausblenden"),
            Line::from(""),
            Line::from("Verbindungen:"),
            Line::from(" ‚Ä¢ Gesamtzahl und Onion-Anteil"),
            Line::from(" ‚Ä¢ Beste/Schlechteste Latenz"),
            Line::from(""),
            Line::from("Latenz-Werte:"),
            Line::from(vec![
                Span::raw(" ‚Ä¢ "),
                Span::styled("< 100ms", Style::default().fg(Color::Green)),
                Span::raw(" = sehr gut"),
            ]),
            Line::from(vec![
                Span::raw(" ‚Ä¢ "),
                Span::styled("100-500ms", Style::default().fg(Color::Yellow)),
                Span::raw(" = normal"),
            ]),
            Line::from(vec![
                Span::raw(" ‚Ä¢ "),
                Span::styled("> 500ms", Style::default().fg(Color::Red)),
                Span::raw(" = langsam"),
            ]),
        ],
        Tab::PeerList => vec![
            Line::from(vec![
                Span::styled("Peer Liste", Style::default().fg(Color::Yellow)),
            ]),
            Line::from(""),
            Line::from(" ‚Ä¢ Liste aller verbundenen Peers"),
            Line::from(" ‚Ä¢ Sortiert nach Latenz"),
            Line::from(" ‚Ä¢ Onion/Clearnet Status"),
        ],
        Tab::Mining => vec![
            Line::from(vec![
                Span::styled("Mining Status", Style::default().fg(Color::Yellow)),
            ]),
            Line::from(""),
            Line::from("Tastenbelegung:"),
            Line::from(" [R] Aktualisieren"),
            Line::from(" [H] Hilfe ausblenden"),
            Line::from(""),
            Line::from("Informationen:"),
            Line::from(" ‚Ä¢ Aktuelle Difficulty"),
            Line::from(" ‚Ä¢ Netzwerk-Hashrate"),
            Line::from(" ‚Ä¢ Zeit bis Difficulty-Anpassung"),
            Line::from(" ‚Ä¢ Mining-Pool Verteilung"),
        ],
        Tab::Security => vec![
            Line::from(vec![
                Span::styled("Sicherheitsstatus", Style::default().fg(Color::Yellow)),
            ]),
            Line::from(""),
            Line::from("Tastenbelegung:"),
            Line::from(" [R] Aktualisieren"),
            Line::from(" [H] Hilfe ausblenden"),
            Line::from(""),
            Line::from("√úberwachung:"),
            Line::from(" ‚Ä¢ Softwareversion-Check"),
            Line::from(" ‚Ä¢ Peer-Verbindungssicherheit"),
            Line::from(" ‚Ä¢ Firewall-Status"),
            Line::from(" ‚Ä¢ Tor-Verbindungsqualit√§t"),
        ],
        Tab::Explorer => vec![
            Line::from(vec![
                Span::styled("Blockchain Explorer", Style::default().fg(Color::Yellow)),
            ]),
            Line::from(""),
            Line::from("Tastenbelegung:"),
            Line::from(" [B] Block suchen"),
            Line::from(" [T] Transaktion suchen"),
            Line::from(" [A] Adresse suchen"),
            Line::from(" [Enter] Suche ausf√ºhren"),
            Line::from(" [Esc] Suche abbrechen"),
            Line::from(""),
            Line::from("Suchoptionen:"),
            Line::from(" ‚Ä¢ Block: H√∂he oder Hash"),
            Line::from(" ‚Ä¢ Transaktion: TXID"),
            Line::from(" ‚Ä¢ Adresse: Base58 oder Bech32"),
        ],
    };

    Paragraph::new(content)
        .block(Block::default()
            .title(" Hilfe ")
            .borders(Borders::ALL))
        .wrap(Wrap { trim: true })
} 